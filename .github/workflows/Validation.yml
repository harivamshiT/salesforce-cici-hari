name: Validate

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      
concurrency:
  group: ${{github.ref}}
  cancel-in-progress: true
  
jobs:
  SFDX_Package_Prepartaion:
    runs-on: ubuntu-latest
    steps:        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
    
      - name: Checkout GitHub
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
            ref: "${{ github.head_ref }}"

      - name: Pull Request Details
        if: github.event_name == 'pull_request'
        run: |
            SOURCE_BRANCH="${{ github.head_ref }}"
            TARGET_BRANCH="${{ github.base_ref }}"
            echo "SOURCE_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
            echo "TARGET_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV
            echo "Pull Request : SOURCE_BRANCH-$SOURCE_BRANCH - - - TARGET_BRANCH-$TARGET_BRANCH"

      - name: Source Branch Operations
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: SourceBranchPath
          ref: ${{env.SOURCE_BRANCH}}

      - name: Target Branch Operations
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: TargetBranchPath
          ref: ${{ env.TARGET_BRANCH }}

      - name : Commit ID extractions for PR
        if: github.event_name == 'pull_request'
        run: |
          sh scripts/shell/commitExtractPR.sh

      - name: Package preparation
        run: |
          sh scripts/shell/deltaComponentRetrieve.sh ${{env.SOURCE_COMMIT_ID}} ${{env.TARGET_COMMIT_ID}}
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: sf-package
            path: package/*

  Validate-pull-request:
    name: Validation
    needs: SFDX_Package_Prepartaion
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Salesforce CLI
        run: |
            npm install @salesforce/cli --global
            sf plugins install @salesforce/plugin-deploy-retrieve

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: sf-package
          path: package/
              
      - name: Display Package
        run: |
          echo "Displaying the Package.xml"
          cat package/package.xml
          echo "Displaying the destructiveChanges.xml"
          cat package/destructiveChanges.xml

  check-time:
    runs-on: ubuntu-latest
    needs: Validate-pull-request
    steps:
      - name: Get current UTC time and convert to IST
        id: time-check
        run: |
          # Get current time in UTC
          CURRENT_HOUR=$(date -u +"%H")
          CURRENT_MINUTE=$(date -u +"%M")
          echo "$CURRENT_HOUR"
          echo "$CURRENT_MINUTE"
          
          # Convert UTC to IST (+5:30 offset)
          IST_HOUR=$(( (CURRENT_HOUR + 5 + (CURRENT_MINUTE >= 30 ? 1 : 0)) % 24 ))
          IST_MINUTE=$(( (CURRENT_MINUTE + 30) % 60 ))
          
          echo "IST Time: $IST_HOUR:$IST_MINUTE"
          echo "IST_HOUR=$IST_HOUR" >> $GITHUB_ENV

      - name: Validate PR timing
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          IST_HOUR=${{ env.IST_HOUR }}

          # Check if current time is within 9 AM - 5:59 PM IST
          if [[ "$IST_HOUR" -ge 9 && "$IST_HOUR" -le 17 ]]; then
            echo "PR is created within allowed time. ✅"
            exit 0
          fi

          # Check if PR title contains "HIGH PRIORITY" or "BLOCKER"
          if [[ "$PR_TITLE" =~ HIGH\ PRIORITY || "$PR_TITLE" =~ BLOCKER ]]; then
            echo "PR is outside allowed time, but marked as HIGH PRIORITY or BLOCKER. ✅"
            exit 0
          fi

          echo "PR creation outside allowed time and not marked as HIGH PRIORITY or BLOCKER. ❌"
          exit 1